{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arbog\\\\Documents\\\\workshop_app_frontend\\\\front-end\\\\src\\\\Components\\\\Admin\\\\WorkshopAttendeesSubComponents\\\\WorkshopInfo.js\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { MdDelete, MdEdit, MdMessage } from \"react-icons/md\";\nimport { UserContext } from \"../../../Context/UserContext\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport ReactPDF, { PDFViewer, PDFDownloadLink, BlobProvider, pdf } from \"@react-pdf/renderer\";\nimport ReactDOM from \"react-dom\";\nimport WorkshopView from \"../Documents/WorkshopView\";\nimport { FaListUl } from \"react-icons/fa\";\nimport { CSVLink, CSVDownload } from \"react-csv\";\n\nconst WorkshopInfo = ({\n  workshop,\n  toggleDisplayModal,\n  selectModal,\n  attendees\n}) => {\n  const {\n    user\n  } = useContext(UserContext);\n  const [statusClipboard, setStatusClipboard] = useState(true);\n  const [data, setData] = useState([]);\n  const listofemail = attendees.map(attendee => `${attendee.email}; `).join(\"\");\n\n  const handleEdit = () => {\n    toggleDisplayModal(\"workshop\");\n  };\n\n  const hanldeNotification = () => {\n    toggleDisplayModal(\"notification\");\n  };\n\n  const headers = [{\n    label: \"Title\",\n    key: \"title\"\n  }, {\n    label: \"Speaker\",\n    key: \"speaker\"\n  }, {\n    label: \"Capacity\",\n    key: \"capacity\"\n  }, {\n    label: \"Room Type\",\n    key: \"room_type\"\n  }, {\n    label: \"Room Manager\",\n    key: \"room_manager\"\n  }, {\n    label: \"Attendee Name\",\n    key: \"aName\"\n  }, {\n    label: \"Attendee Email\",\n    key: \"aEmail\"\n  }, {\n    label: \"Company\",\n    key: \"aCompany\"\n  }];\n  useEffect(() => {\n    const attendeesRows = attendees.map(attendee => ({\n      title: workshop.title,\n      speaker: workshop.workshop_speaker,\n      capacity: workshop.room_capacity,\n      room_type: workshop.room_type,\n      room_manager: workshop.room_manager,\n      aName: `${attendee.firstname} ${attendee.lastname}`,\n      aEmail: attendee.email,\n      aCompany: attendee.company\n    }));\n    setData(attendeesRows);\n  }, []);\n  return workshop !== [] && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"workshop-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"workshop-info-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"workshop-info-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, workshop.date && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, `${workshop.date.substring(8, 10)} ${workshop.workshop_month} - ${workshop.starting_hour.substring(0, 5)}-${workshop.ending_hour.substring(0, 5)}`)), user.role === \"speaker\" && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 41\n    }\n  }, \"Welcome \", user.firstname), user.role === \"speaker\" && /*#__PURE__*/React.createElement(CopyToClipboard, {\n    text: listofemail,\n    onCopy: () => setStatusClipboard(!statusClipboard),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, statusClipboard ? \"Copy\" : \"Copied\")), user.role !== \"speaker\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"options-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FaListUl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"workshop-info-dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"workshop-icons\",\n    onClick: hanldeNotification,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 19\n    }\n  }, \"notification\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"workshop-icons\",\n    onClick: handleEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 19\n    }\n  }, \"edit\"), /*#__PURE__*/React.createElement(PDFDownloadLink, {\n    document: /*#__PURE__*/React.createElement(WorkshopView, {\n      workshop: workshop,\n      attendees: attendees,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 23\n      }\n    }),\n    fileName: \"Test.pdf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }\n  }, ({\n    blob,\n    url,\n    loading,\n    error\n  }) => loading ? /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 33\n    }\n  }, \"loading\") : /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 60\n    }\n  }, \"PDF\")), /*#__PURE__*/React.createElement(CSVLink, {\n    data: data,\n    headers: headers,\n    filename: \"Workshop.csv\",\n    className: \"workshop-icons\",\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 19\n    }\n  }, \"CSV\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"workshop-info-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"workshop-info-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, workshop.title), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, workshop.workshop_speaker), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }, workshop.description)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"workshop-info-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"room-manager\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"room\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 19\n    }\n  }, \"Room:\"), \" \", workshop.room), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 19\n    }\n  }, \"Room manager:\"), \" \", workshop.room_manager)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, \"Room setup:\"), \" \", workshop.room_type), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }, \"Room capacity:\"), \" \", workshop.room_capacity), /*#__PURE__*/React.createElement(\"p\", {\n    className: workshop.status_open === 1 ? \"open\" : \"closed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }, \"Registrations:\"), \" \", workshop.status_open === 1 ? \"OPEN\" : \"CLOSED\")))));\n}; //ReactDOM.render(<WorkshopView />, document.getElementById(\"root\"));\n\n\nexport default WorkshopInfo;","map":{"version":3,"sources":["C:/Users/arbog/Documents/workshop_app_frontend/front-end/src/Components/Admin/WorkshopAttendeesSubComponents/WorkshopInfo.js"],"names":["React","useContext","useState","useEffect","MdDelete","MdEdit","MdMessage","UserContext","CopyToClipboard","ReactPDF","PDFViewer","PDFDownloadLink","BlobProvider","pdf","ReactDOM","WorkshopView","FaListUl","CSVLink","CSVDownload","WorkshopInfo","workshop","toggleDisplayModal","selectModal","attendees","user","statusClipboard","setStatusClipboard","data","setData","listofemail","map","attendee","email","join","handleEdit","hanldeNotification","headers","label","key","attendeesRows","title","speaker","workshop_speaker","capacity","room_capacity","room_type","room_manager","aName","firstname","lastname","aEmail","aCompany","company","date","substring","workshop_month","starting_hour","ending_hour","role","blob","url","loading","error","description","room","status_open"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\r\nimport { MdDelete, MdEdit, MdMessage } from \"react-icons/md\";\r\nimport { UserContext } from \"../../../Context/UserContext\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport ReactPDF, {\r\n  PDFViewer,\r\n  PDFDownloadLink,\r\n  BlobProvider,\r\n  pdf,\r\n} from \"@react-pdf/renderer\";\r\nimport ReactDOM from \"react-dom\";\r\nimport WorkshopView from \"../Documents/WorkshopView\";\r\nimport { FaListUl } from \"react-icons/fa\";\r\nimport { CSVLink, CSVDownload } from \"react-csv\";\r\n\r\nconst WorkshopInfo = ({\r\n  workshop,\r\n  toggleDisplayModal,\r\n  selectModal,\r\n  attendees,\r\n}) => {\r\n  const { user } = useContext(UserContext);\r\n  const [statusClipboard, setStatusClipboard] = useState(true);\r\n  const [data, setData] = useState([]);\r\n\r\n  const listofemail = attendees\r\n    .map((attendee) => `${attendee.email}; `)\r\n    .join(\"\");\r\n\r\n  const handleEdit = () => {\r\n    toggleDisplayModal(\"workshop\");\r\n  };\r\n\r\n  const hanldeNotification = () => {\r\n    toggleDisplayModal(\"notification\");\r\n  };\r\n\r\n  const headers = [\r\n    { label: \"Title\", key: \"title\" },\r\n    { label: \"Speaker\", key: \"speaker\" },\r\n    { label: \"Capacity\", key: \"capacity\" },\r\n    { label: \"Room Type\", key: \"room_type\" },\r\n    { label: \"Room Manager\", key: \"room_manager\" },\r\n    { label: \"Attendee Name\", key: \"aName\" },\r\n    { label: \"Attendee Email\", key: \"aEmail\" },\r\n    { label: \"Company\", key: \"aCompany\" },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const attendeesRows = attendees.map((attendee) => ({\r\n      title: workshop.title,\r\n      speaker: workshop.workshop_speaker,\r\n      capacity: workshop.room_capacity,\r\n      room_type: workshop.room_type,\r\n      room_manager: workshop.room_manager,\r\n      aName: `${attendee.firstname} ${attendee.lastname}`,\r\n      aEmail: attendee.email,\r\n      aCompany: attendee.company,\r\n    }));\r\n    setData(attendeesRows);\r\n  }, []);\r\n\r\n  return (\r\n    workshop !== [] && (\r\n      <div>\r\n        <div className=\"workshop-info\">\r\n          <div className=\"workshop-info-header\">\r\n            <div className=\"workshop-info-date\">\r\n              {workshop.date && (\r\n                <div className=\"date\">{`${workshop.date.substring(8, 10)} ${\r\n                  workshop.workshop_month\r\n                } - ${workshop.starting_hour.substring(\r\n                  0,\r\n                  5\r\n                )}-${workshop.ending_hour.substring(0, 5)}`}</div>\r\n              )}\r\n            </div>\r\n            {user.role === \"speaker\" && <div>Welcome {user.firstname}</div>}\r\n            {user.role === \"speaker\" && (\r\n              <CopyToClipboard\r\n                text={listofemail}\r\n                onCopy={() => setStatusClipboard(!statusClipboard)}\r\n              >\r\n                <button>{statusClipboard ? \"Copy\" : \"Copied\"}</button>\r\n              </CopyToClipboard>\r\n            )}\r\n            {user.role !== \"speaker\" && (\r\n              <div className=\"dropdown\">\r\n                <button className=\"options-icon\">\r\n                  <FaListUl />\r\n                </button>\r\n                <div className=\"workshop-info-dropdown\">\r\n                  <button\r\n                    className=\"workshop-icons\"\r\n                    onClick={hanldeNotification}\r\n                  >\r\n                    notification\r\n                  </button>\r\n                  <button className=\"workshop-icons\" onClick={handleEdit}>\r\n                    edit\r\n                  </button>\r\n                  <PDFDownloadLink\r\n                    document={\r\n                      <WorkshopView workshop={workshop} attendees={attendees} />\r\n                    }\r\n                    fileName=\"Test.pdf\"\r\n                  >\r\n                    {({ blob, url, loading, error }) =>\r\n                      loading ? <button>loading</button> : <button>PDF</button>\r\n                    }\r\n                  </PDFDownloadLink>\r\n                  <CSVLink\r\n                    data={data}\r\n                    headers={headers}\r\n                    filename={\"Workshop.csv\"}\r\n                    className=\"workshop-icons\"\r\n                    target=\"_blank\"\r\n                  >\r\n                    CSV\r\n                  </CSVLink>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"workshop-info-body\">\r\n            <div className=\"workshop-info-left\">\r\n              <h2>{workshop.title}</h2>\r\n              <h4>{workshop.workshop_speaker}</h4>\r\n              <p>{workshop.description}</p>\r\n            </div>\r\n            <div className=\"workshop-info-right\">\r\n              <div className=\"room-manager\">\r\n                <p className=\"room\">\r\n                  <span>Room:</span> {workshop.room}\r\n                </p>\r\n                <p>\r\n                  <span>Room manager:</span> {workshop.room_manager}\r\n                </p>\r\n              </div>\r\n              <p>\r\n                <span>Room setup:</span> {workshop.room_type}\r\n              </p>\r\n              <p>\r\n                <span>Room capacity:</span> {workshop.room_capacity}\r\n              </p>\r\n              <p className={workshop.status_open === 1 ? \"open\" : \"closed\"}>\r\n                <span>Registrations:</span>{\" \"}\r\n                {workshop.status_open === 1 ? \"OPEN\" : \"CLOSED\"}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n//ReactDOM.render(<WorkshopView />, document.getElementById(\"root\"));\r\nexport default WorkshopInfo;\r\n"]},"metadata":{},"sourceType":"module"}