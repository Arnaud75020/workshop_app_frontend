{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arbog\\\\Documents\\\\workshop_app_frontend\\\\front-end\\\\src\\\\Components\\\\Admin\\\\NewNotificationSubComponents\\\\NotificationForm.js\";\nimport React, { useContext, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { NotificationContext } from \"../../../Context/NotificationContext\";\nimport { WorkshopContext } from \"../../../Context/WorkshopContext\";\nimport uuid from \"react-uuid\";\nimport { UserContext } from \"../../../Context/UserContext\";\n\nconst NotificationForm = () => {\n  const {\n    addTempNotification\n  } = useContext(NotificationContext);\n  const {\n    allWorkshops,\n    getAttendees,\n    attendees\n  } = useContext(WorkshopContext);\n  const {\n    allAttendees,\n    speakers,\n    users\n  } = useContext(UserContext);\n  const [checkboxCheck, setCheckboxCheck] = useState(false);\n  const [selectWorkshop, setSelectWorkshop] = useState(false);\n\n  const toggleSchedule = () => {\n    setCheckboxCheck(!checkboxCheck);\n  };\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    errors\n  } = useForm();\n\n  const onSubmit = data => {\n    const emailsList = attendees.map(attendee => {\n      return attendee.email;\n    }).join();\n    let workshopTitle = \"\";\n\n    if (data.workshop) {\n      const workshop = data.workshop.split(\",\");\n      workshopTitle = workshop[0];\n    }\n\n    const now = new Date();\n    const now_formated = `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDay()}T${now.getHours()}:${now.getMinutes()}`;\n    const date = data.checkbox ? data.date : now_formated;\n    const state = data.checkbox ? \"scheduled\" : \"send\";\n    const newObject = {\n      id: uuid(),\n      to: data.to,\n      workshop: data.workshop,\n      subject: data.subject,\n      content: data.content,\n      state: state,\n      date: date,\n      checkbox: data.checkbox,\n      emailsList: emailsList\n    };\n    reset({\n      date: \"\",\n      to: \"\",\n      subject: \"\",\n      content: \"\",\n      checkbox: false\n    });\n    addTempNotification(newObject);\n\n    if (data.checkbox) {\n      toggleSchedule();\n    }\n\n    if (data.workshop) {\n      setSelectWorkshop(false);\n    }\n  };\n\n  const allUsers = users.filter(user => user.role !== \"admin\");\n\n  const onChangeSelect = event => {\n    const {\n      value\n    } = event.target;\n\n    if (value === \"Workshop\") {\n      setSelectWorkshop(true);\n    } else {\n      setSelectWorkshop(false);\n\n      if (value === \"All\") {\n        getAttendees(allUsers);\n      } else if (value === \"All Speakers\") {\n        getAttendees(speakers);\n      } else {\n        getAttendees(allAttendees);\n      }\n    }\n  };\n\n  const handleToWorkshop = event => {\n    event.preventDefault();\n    const {\n      value\n    } = event.target;\n    const workshop = value.split(\",\");\n    const speakerId = Number(workshop[1]);\n    getAttendees(speakerId);\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"new-notification-form\",\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"new-notification-form-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"new-notification-form-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    onChange: onChangeSelect,\n    name: \"to\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, \"To:\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"All\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"All Attendees\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, \"All Attendees\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"All Speakers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, \"All Speakers\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Workshop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, \"Workshop\")), errors.to && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 23\n    }\n  }, \"please select an addressee\"), selectWorkshop && /*#__PURE__*/React.createElement(\"select\", {\n    name: \"workshop\",\n    onChange: handleToWorkshop,\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, \"Select a Workshop\"), allWorkshops.map(workshop => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: [workshop.title, workshop.speaker_id],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, workshop.title);\n  })), selectWorkshop && errors.workshop && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 47\n    }\n  }, \"please select a workshop\"), /*#__PURE__*/React.createElement(\"input\", {\n    style: errors.subject && {\n      border: \"1px solid #3B65B0\"\n    },\n    type: \"text\",\n    placeholder: \"Subject\",\n    name: \"subject\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }), errors.subject && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 28\n    }\n  }, \"please add a subject\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    style: errors.content && {\n      border: \"1px solid #3B65B0\"\n    },\n    className: \"content\",\n    type: \"text\",\n    placeholder: \"Content\",\n    name: \"content\",\n    row: \"5\",\n    cols: \"50\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }), errors.content && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 28\n    }\n  }, \"please add some content\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"schedule\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"schedule\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }, \"Schedule\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"checkbox\",\n    id: \"schedule\",\n    value: checkboxCheck,\n    onChange: toggleSchedule,\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }), checkboxCheck && /*#__PURE__*/React.createElement(\"input\", {\n    style: errors.subject && {\n      border: \"1px solid #3B65B0\"\n    },\n    type: \"datetime-local\",\n    name: \"date\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }), errors.date && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 27\n    }\n  }, \"please choose a date\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"new-notification-form-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, \"Create\")));\n};\n\nexport default NotificationForm;","map":{"version":3,"sources":["C:/Users/arbog/Documents/workshop_app_frontend/front-end/src/Components/Admin/NewNotificationSubComponents/NotificationForm.js"],"names":["React","useContext","useState","useForm","NotificationContext","WorkshopContext","uuid","UserContext","NotificationForm","addTempNotification","allWorkshops","getAttendees","attendees","allAttendees","speakers","users","checkboxCheck","setCheckboxCheck","selectWorkshop","setSelectWorkshop","toggleSchedule","register","handleSubmit","reset","errors","onSubmit","data","emailsList","map","attendee","email","join","workshopTitle","workshop","split","now","Date","now_formated","getFullYear","getMonth","getDay","getHours","getMinutes","date","checkbox","state","newObject","id","to","subject","content","allUsers","filter","user","role","onChangeSelect","event","value","target","handleToWorkshop","preventDefault","speakerId","Number","required","title","speaker_id","border"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { NotificationContext } from \"../../../Context/NotificationContext\";\r\nimport { WorkshopContext } from \"../../../Context/WorkshopContext\";\r\nimport uuid from \"react-uuid\";\r\nimport { UserContext } from \"../../../Context/UserContext\";\r\n\r\nconst NotificationForm = () => {\r\n  const { addTempNotification } = useContext(NotificationContext);\r\n  const { allWorkshops, getAttendees, attendees } = useContext(WorkshopContext);\r\n  const { allAttendees, speakers, users } = useContext(UserContext);\r\n\r\n  const [checkboxCheck, setCheckboxCheck] = useState(false);\r\n  const [selectWorkshop, setSelectWorkshop] = useState(false);\r\n\r\n\r\n    const toggleSchedule = () => {\r\n        setCheckboxCheck(!checkboxCheck);\r\n    };\r\n  \r\n    const { register, handleSubmit, reset, errors } = useForm();\r\n\r\n    const onSubmit = (data) => {\r\n      \r\n      const emailsList = attendees.map(attendee => {\r\n        return attendee.email\r\n      }).join()\r\n\r\n        let workshopTitle = \"\";\r\n\r\n        if(data.workshop){\r\n            const workshop = data.workshop.split(\",\")\r\n            workshopTitle = workshop[0]\r\n        }\r\n\r\n        const now = new Date();\r\n\r\n        const now_formated = `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDay()}T${now.getHours()}:${now.getMinutes()}`\r\n\r\n        const date = data.checkbox ? data.date : now_formated;\r\n\r\n        const state = data.checkbox ? \"scheduled\" : \"send\"\r\n\r\n        const newObject = {\r\n            id: uuid(),\r\n            to: data.to,\r\n            workshop: data.workshop,\r\n            subject: data.subject,\r\n            content: data.content,\r\n            state: state,\r\n            date: date,\r\n            checkbox: data.checkbox,\r\n            emailsList: emailsList\r\n            };\r\n            reset({\r\n                date: \"\",\r\n                to:\"\",\r\n                subject:\"\",\r\n                content:\"\",\r\n                checkbox: false\r\n            })\r\n        addTempNotification(newObject);\r\n        \r\n        if(data.checkbox){\r\n            toggleSchedule()\r\n        }\r\n        if(data.workshop){\r\n            setSelectWorkshop(false)\r\n        }\r\n\r\n    };\r\n\r\n    const allUsers = users.filter(user => user.role !== \"admin\")\r\n\r\n    const onChangeSelect = (event) => {\r\n    const { value } = event.target;\r\n\r\n    if(value === \"Workshop\"){\r\n      setSelectWorkshop(true)\r\n  } else {\r\n      setSelectWorkshop(false)\r\n      if(value === \"All\"){\r\n        getAttendees(allUsers)\r\n      } else if(value === \"All Speakers\"){\r\n        getAttendees(speakers)\r\n      } else {\r\n        getAttendees(allAttendees)\r\n      }\r\n  }\r\n  };\r\n\r\n  const handleToWorkshop = (event) => {\r\n    event.preventDefault();\r\n    const { value } = event.target;\r\n    const workshop = value.split(\",\");\r\n    const speakerId = Number(workshop[1]);\r\n    getAttendees(speakerId);\r\n  };\r\n\r\n  return (\r\n    <form className=\"new-notification-form\" onSubmit={handleSubmit(onSubmit)}>\r\n      <div className=\"new-notification-form-header\" />\r\n      <div className=\"new-notification-form-body\">\r\n        <select\r\n          onChange={onChangeSelect}\r\n          name=\"to\"\r\n          ref={register({ required: true })}\r\n        >\r\n          <option value=\"\">To:</option>\r\n          <option value=\"All\">All</option>\r\n          <option value=\"All Attendees\">All Attendees</option>\r\n          <option value=\"All Speakers\">All Speakers</option>\r\n          <option value=\"Workshop\">Workshop</option>\r\n        </select>\r\n        {errors.to && <p>please select an addressee</p>}\r\n        {selectWorkshop && (\r\n          <select\r\n            name=\"workshop\"\r\n            onChange={handleToWorkshop}\r\n            ref={register({ required: true })}\r\n          >\r\n            <option value=\"\">Select a Workshop</option>\r\n            {allWorkshops.map((workshop) => {\r\n              return (\r\n                <option value={[workshop.title, workshop.speaker_id]}>\r\n                  {workshop.title}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        )}\r\n        {selectWorkshop && errors.workshop && <p>please select a workshop</p>}\r\n        <input\r\n          style={errors.subject && { border: \"1px solid #3B65B0\" }}\r\n          type=\"text\"\r\n          placeholder=\"Subject\"\r\n          name=\"subject\"\r\n          ref={register({ required: true })}\r\n        />\r\n        {errors.subject && <p>please add a subject</p>}\r\n        <textarea\r\n          style={errors.content && { border: \"1px solid #3B65B0\" }}\r\n          className=\"content\"\r\n          type=\"text\"\r\n          placeholder=\"Content\"\r\n          name=\"content\"\r\n          row=\"5\"\r\n          cols=\"50\"\r\n          ref={register({ required: true })}\r\n        />\r\n        {errors.content && <p>please add some content</p>}\r\n        <div className=\"schedule\">\r\n          <label htmlFor=\"schedule\">Schedule</label>\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"checkbox\"\r\n            id=\"schedule\"\r\n            value={checkboxCheck}\r\n            onChange={toggleSchedule}\r\n            ref={register}\r\n          />\r\n          {checkboxCheck && (\r\n            <input\r\n              style={errors.subject && { border: \"1px solid #3B65B0\" }}\r\n              type=\"datetime-local\"\r\n              name=\"date\"\r\n              ref={register({ required: true })}\r\n            />\r\n          )}\r\n          {errors.date && <p>please choose a date</p>}\r\n        </div>\r\n      </div>\r\n      <div className=\"new-notification-form-footer\">\r\n        <button type=\"submit\">Create</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NotificationForm;\r\n"]},"metadata":{},"sourceType":"module"}