{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arbog\\\\Documents\\\\workshop_app_frontend\\\\front-end\\\\src\\\\Components\\\\Admin\\\\NewNotificationSubComponents\\\\TempNotification.js\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { NotificationContext } from \"../../../Context/NotificationContext\";\nimport Modal from \"../Modals/Modal\";\nimport { WorkshopContext } from \"../../../Context/WorkshopContext\";\nimport { UserContext } from \"../../../Context/UserContext\";\n\nconst TempNotification = ({\n  tempNotification,\n  toggleDisplayModal\n}) => {\n  const {\n    editNotification,\n    deleteTempNotification,\n    confirmNotification\n  } = useContext(NotificationContext);\n  const {\n    allWorkshops,\n    getAttendees,\n    attendees\n  } = useContext(WorkshopContext);\n  const {\n    allAttendees,\n    speakers,\n    users\n  } = useContext(UserContext);\n  const [editMode, setEditMode] = useState(false);\n  const [selectWorkshop, setSelectWorkshop] = useState(false);\n  const [checkboxCheck, setCheckboxCheck] = useState(false);\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  useEffect(() => {\n    if (tempNotification.workshop) {\n      setSelectWorkshop(true);\n    }\n  }, []);\n\n  const onSubmit = data => {\n    const emailsList = attendees.map(attendee => {\n      return attendee.email;\n    }).join();\n    let workshopTitle = \"\";\n\n    if (data.workshop) {\n      const workshop = data.workshop.split(\",\");\n      workshopTitle = workshop[0];\n    }\n\n    const now = new Date();\n    const now_formated = `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDay()}T${now.getHours()}:${now.getMinutes()}`;\n    const date = data.checkbox ? data.date : now_formated;\n    const state = data.checkbox ? \"scheduled\" : \"send\";\n    const newObject = {\n      id: tempNotification.id,\n      to: data.to,\n      workshop: data.workshop,\n      subject: data.subject,\n      content: data.content,\n      state: state,\n      date: date,\n      checkbox: data.checkbox,\n      emailsList: emailsList\n    };\n    editNotification(newObject);\n    handleEdit();\n  };\n\n  const handleConfirmNotification = () => {\n    let workshopTitle = \"\";\n\n    if (tempNotification.workshop) {\n      workshopTitle = tempNotification.workshop.split(\",\")[0];\n    }\n\n    const sendTo = tempNotification.workshop === undefined ? tempNotification.to : workshopTitle;\n    const newObject = [{\n      subject: tempNotification.subject,\n      content: tempNotification.content,\n      state: tempNotification.state,\n      send_to: sendTo,\n      date: tempNotification.date,\n      emailsList: tempNotification.emailsList\n    }];\n    confirmNotification(newObject);\n    toggleDisplayModal(\"message\", \"Notification successfully added\");\n    deleteTempNotification(tempNotification.id);\n  };\n\n  console.log(\"tempNotification\", tempNotification);\n\n  const handleDelete = () => {\n    toggleDisplayModal(\"confirm\", \"Do you want to delete this Notification?\", tempNotification.id);\n  };\n\n  const toggleSchedule = () => {\n    setCheckboxCheck(!checkboxCheck);\n  };\n\n  const handleEdit = () => {\n    setEditMode(!editMode);\n    setCheckboxCheck(tempNotification.checkbox);\n  };\n\n  const handleToWorkshop = event => {\n    const {\n      value\n    } = event.target;\n    const workshop = value.split(\",\");\n    const workshopId = Number(workshop[1]);\n    getAttendees(workshopId);\n  };\n\n  const allUsers = users.filter(user => user.role !== \"admin\");\n\n  const onChangeSelect = event => {\n    const {\n      value\n    } = event.target;\n\n    if (value === \"Workshop\") {\n      setSelectWorkshop(true);\n    } else {\n      setSelectWorkshop(false);\n\n      if (value === \"All\") {\n        getAttendees(allUsers);\n      } else if (value === \"All Speakers\") {\n        getAttendees(speakers);\n      } else {\n        getAttendees(allAttendees);\n      }\n    }\n  };\n\n  let notificationWorkshop = \"\";\n  let workshopTitle = \"\";\n\n  if (tempNotification.workshop) {\n    notificationWorkshop = tempNotification.workshop.split(\",\");\n    workshopTitle = notificationWorkshop[0];\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 5\n    }\n  }, !editMode && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"temp-notification-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"temp-notification-info-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, tempNotification.date), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"temp-notification-info-header-btns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }, \"Edit Notification\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  }, \"Delete Notification\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"temp-notification-info-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  }, \"To:\"), \" \", tempNotification.workshop ? workshopTitle : tempNotification.to), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }\n  }, \"Subject :\"), tempNotification.subject), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }, \"Content: \"), tempNotification.content), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 15\n    }\n  }, \"State: \"), tempNotification.state)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"temp-notification-info-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleConfirmNotification,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, \"Confirm Notification\"))), editMode && /*#__PURE__*/React.createElement(\"form\", {\n    className: \"new-notification-form\",\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"new-notification-form-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"new-notification-form-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    name: \"to\",\n    onChange: onChangeSelect,\n    defaultValue: tempNotification.to,\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 15\n    }\n  }, \"To:\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"All\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 15\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"All Attendees\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 15\n    }\n  }, \"All Attendees\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"All Speakers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 15\n    }\n  }, \"All Speakers\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Workshop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 15\n    }\n  }, \"Workshop\")), errors.to && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 27\n    }\n  }, \"please select an addressee\"), selectWorkshop && /*#__PURE__*/React.createElement(\"select\", {\n    name: \"workshop\",\n    onChange: handleToWorkshop,\n    defaultValue: tempNotification.workshop,\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 21\n    }\n  }, \"Select a Workshop\"), allWorkshops.map(workshop => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: [workshop.title, workshop.id],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 32\n      }\n    }, workshop.title);\n  })), selectWorkshop && errors.workshop && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 55\n    }\n  }, \"please select a workshop\"), /*#__PURE__*/React.createElement(\"input\", {\n    style: errors.subject && {\n      border: \"1px solid #3B65B0\"\n    },\n    type: \"text\",\n    placeholder: \"Subject\",\n    name: \"subject\",\n    defaultValue: tempNotification.subject,\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  }), errors.subject && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 32\n    }\n  }, \"please add a subject\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    style: errors.content && {\n      border: \"1px solid #3B65B0\"\n    },\n    className: \"content\",\n    type: \"text\",\n    placeholder: \"Content\",\n    name: \"content\",\n    row: \"5\",\n    cols: \"50\",\n    defaultValue: tempNotification.content,\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }\n  }), errors.content && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 32\n    }\n  }, \"please add some content\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"schedule\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"schedule\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 15\n    }\n  }, \"Schedule\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"checkbox\",\n    id: \"schedule\",\n    defaultChecked: tempNotification.checkbox,\n    value: checkboxCheck,\n    onChange: toggleSchedule,\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 15\n    }\n  }), checkboxCheck && /*#__PURE__*/React.createElement(\"input\", {\n    style: errors.date && {\n      border: \"1px solid #3B65B0\"\n    },\n    type: \"datetime-local\",\n    name: \"date\",\n    defaultValue: tempNotification.date,\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 17\n    }\n  }), errors.date && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 31\n    }\n  }, \"please choose a date\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"new-notification-form-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }\n  }, \"Save\"))), \")\");\n};\n\nexport default TempNotification;","map":{"version":3,"sources":["C:/Users/arbog/Documents/workshop_app_frontend/front-end/src/Components/Admin/NewNotificationSubComponents/TempNotification.js"],"names":["React","useContext","useState","useEffect","useForm","NotificationContext","Modal","WorkshopContext","UserContext","TempNotification","tempNotification","toggleDisplayModal","editNotification","deleteTempNotification","confirmNotification","allWorkshops","getAttendees","attendees","allAttendees","speakers","users","editMode","setEditMode","selectWorkshop","setSelectWorkshop","checkboxCheck","setCheckboxCheck","register","handleSubmit","errors","workshop","onSubmit","data","emailsList","map","attendee","email","join","workshopTitle","split","now","Date","now_formated","getFullYear","getMonth","getDay","getHours","getMinutes","date","checkbox","state","newObject","id","to","subject","content","handleEdit","handleConfirmNotification","sendTo","undefined","send_to","console","log","handleDelete","toggleSchedule","handleToWorkshop","event","value","target","workshopId","Number","allUsers","filter","user","role","onChangeSelect","notificationWorkshop","required","title","border"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { NotificationContext } from \"../../../Context/NotificationContext\";\r\nimport Modal from \"../Modals/Modal\";\r\nimport { WorkshopContext } from \"../../../Context/WorkshopContext\";\r\nimport { UserContext } from \"../../../Context/UserContext\";\r\n\r\nconst TempNotification = ({ tempNotification, toggleDisplayModal }) => {\r\n  const {\r\n    editNotification,\r\n    deleteTempNotification,\r\n    confirmNotification,\r\n  } = useContext(NotificationContext);\r\n  const { allWorkshops, getAttendees, attendees } = useContext(WorkshopContext);\r\n  const { allAttendees, speakers, users } = useContext(UserContext);\r\n\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [selectWorkshop, setSelectWorkshop] = useState(false);\r\n  const [checkboxCheck, setCheckboxCheck] = useState(false);\r\n\r\n  const { register, handleSubmit, errors } = useForm();\r\n\r\n  useEffect(() => {\r\n    if(tempNotification.workshop){\r\n      setSelectWorkshop(true)\r\n    }\r\n  },[])\r\n\r\n  const onSubmit = (data) => {\r\n\r\n    const emailsList = attendees.map(attendee => {\r\n      return attendee.email\r\n    }).join()\r\n\r\n    let workshopTitle = \"\";\r\n\r\n    if(data.workshop){\r\n        const workshop = data.workshop.split(\",\")\r\n        workshopTitle = workshop[0]\r\n    }\r\n\r\n    const now = new Date();\r\n\r\n    const now_formated = `${now.getFullYear()}-${\r\n        now.getMonth() + 1 }-${now.getDay()}T${now.getHours()}:${now.getMinutes()}`;\r\n\r\n    const date = data.checkbox ? data.date : now_formated;\r\n\r\n    const state = data.checkbox ? \"scheduled\" : \"send\";\r\n\r\n    const newObject = {\r\n      id:tempNotification.id,\r\n      to: data.to,\r\n      workshop: data.workshop,\r\n      subject: data.subject,\r\n      content: data.content,\r\n      state: state,\r\n      date: date,\r\n      checkbox: data.checkbox,\r\n      emailsList: emailsList\r\n    };\r\n\r\n    editNotification(newObject);\r\n    handleEdit();\r\n  };\r\n\r\n  const handleConfirmNotification = () => {\r\n\r\n    let workshopTitle = \"\"\r\n\r\n      if(tempNotification.workshop){\r\n        workshopTitle = tempNotification.workshop.split(\",\")[0]\r\n      }\r\n\r\n    const sendTo = tempNotification.workshop === undefined ? tempNotification.to : workshopTitle\r\n\r\n    const newObject = [{\r\n      subject: tempNotification.subject,\r\n      content: tempNotification.content,\r\n      state: tempNotification.state,\r\n      send_to: sendTo,\r\n      date: tempNotification.date,\r\n      emailsList: tempNotification.emailsList\r\n    }];\r\n\r\n    confirmNotification(newObject);\r\n    toggleDisplayModal(\"message\", \"Notification successfully added\");\r\n    deleteTempNotification(tempNotification.id);\r\n  };\r\n\r\n  console.log(\"tempNotification\", tempNotification)\r\n\r\n  const handleDelete = () => {\r\n    toggleDisplayModal(\"confirm\",\"Do you want to delete this Notification?\", tempNotification.id)\r\n  };\r\n\r\n  const toggleSchedule = () => {\r\n    setCheckboxCheck(!checkboxCheck);\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setEditMode(!editMode);\r\n    setCheckboxCheck(tempNotification.checkbox);\r\n  };\r\n\r\n  const handleToWorkshop = (event) => {\r\n    const { value } = event.target\r\n    const workshop = value.split(\",\")\r\n    const workshopId = Number(workshop[1])\r\n    getAttendees(workshopId)\r\n}\r\n\r\nconst allUsers = users.filter(user => user.role !== \"admin\")\r\n\r\nconst onChangeSelect = (event) => {\r\n\r\n  const {value} = event.target;\r\n\r\n  if(value === \"Workshop\"){\r\n      setSelectWorkshop(true)\r\n  } else {\r\n      setSelectWorkshop(false)\r\n      if(value === \"All\"){\r\n        getAttendees(allUsers)\r\n      } else if(value === \"All Speakers\"){\r\n        getAttendees(speakers)\r\n      } else {\r\n        getAttendees(allAttendees)\r\n      }\r\n  }\r\n}\r\n\r\n  let notificationWorkshop = \"\"\r\n  let workshopTitle = \"\"\r\n\r\n  if(tempNotification.workshop){\r\n    notificationWorkshop = tempNotification.workshop.split(\",\")\r\n    workshopTitle = notificationWorkshop[0]\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div className=\"temp-notification-info\">\r\n          <div className=\"temp-notification-info-header\">\r\n            <div>{tempNotification.date}</div>\r\n            <div className=\"temp-notification-info-header-btns\">\r\n              <button onClick={handleEdit}>Edit Notification</button>\r\n              <button onClick={handleDelete}>Delete Notification</button>\r\n            </div>\r\n          </div>\r\n          <div className=\"temp-notification-info-body\">\r\n            <div>\r\n              <span>To:</span> {tempNotification.workshop ? workshopTitle : tempNotification.to}\r\n            </div>\r\n            <div>\r\n              <span>Subject :</span>\r\n              {tempNotification.subject}\r\n            </div>\r\n            <div>\r\n              <span>Content: </span>\r\n              {tempNotification.content}\r\n            </div>\r\n            <div>\r\n              <span>State: </span>\r\n              {tempNotification.state}\r\n            </div>\r\n          </div>\r\n          <div className=\"temp-notification-info-footer\">\r\n            <button onClick={handleConfirmNotification}>\r\n              Confirm Notification\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <form\r\n          className=\"new-notification-form\"\r\n          onSubmit={handleSubmit(onSubmit)}\r\n        >\r\n          <div className=\"new-notification-form-header\" />\r\n          <div className=\"new-notification-form-body\">\r\n            <select\r\n              name=\"to\"\r\n              onChange={onChangeSelect} \r\n              defaultValue={tempNotification.to}\r\n              ref={register({ required: true })}\r\n            >\r\n              <option value=\"\">To:</option>\r\n              <option value=\"All\">All</option>\r\n              <option value=\"All Attendees\">All Attendees</option>\r\n              <option value=\"All Speakers\">All Speakers</option>\r\n              <option value=\"Workshop\">Workshop</option>\r\n            </select>\r\n            {errors.to && <p>please select an addressee</p>}\r\n            {selectWorkshop && \r\n                <select name=\"workshop\" onChange={handleToWorkshop} defaultValue={tempNotification.workshop} ref={register({ required: true })}>\r\n                    <option value=\"\">Select a Workshop</option>\r\n                    {allWorkshops.map(workshop => {\r\n                        return <option value={[workshop.title, workshop.id]}>{workshop.title}</option>\r\n                    })}\r\n                </select>\r\n                }\r\n                {selectWorkshop && errors.workshop && <p>please select a workshop</p>}\r\n            <input\r\n              style={errors.subject && { border: \"1px solid #3B65B0\" }}\r\n              type=\"text\"\r\n              placeholder=\"Subject\"\r\n              name=\"subject\"\r\n              defaultValue={tempNotification.subject}\r\n              ref={register({ required: true })}\r\n            />\r\n            {errors.subject && <p>please add a subject</p>}\r\n            <textarea\r\n              style={errors.content && { border: \"1px solid #3B65B0\" }}\r\n              className=\"content\"\r\n              type=\"text\"\r\n              placeholder=\"Content\"\r\n              name=\"content\"\r\n              row=\"5\"\r\n              cols=\"50\"\r\n              defaultValue={tempNotification.content}\r\n              ref={register({ required: true })}\r\n            />\r\n            {errors.content && <p>please add some content</p>}\r\n            <div className=\"schedule\">\r\n              <label htmlFor=\"schedule\">Schedule</label>\r\n              <input\r\n                type=\"checkbox\"\r\n                name=\"checkbox\"\r\n                id=\"schedule\"\r\n                defaultChecked={tempNotification.checkbox}\r\n                value={checkboxCheck}\r\n                onChange={toggleSchedule}\r\n                ref={register}\r\n              />\r\n              {checkboxCheck && (\r\n                <input\r\n                  style={errors.date && { border: \"1px solid #3B65B0\" }}\r\n                  type=\"datetime-local\"\r\n                  name=\"date\"\r\n                  defaultValue={tempNotification.date}\r\n                  ref={register({ required: true })}\r\n                />\r\n              )}\r\n              {errors.date && <p>please choose a date</p>}\r\n            </div>\r\n          </div>\r\n          <div className=\"new-notification-form-footer\">\r\n            <button type=\"submit\">Save</button>\r\n          </div>\r\n        </form>\r\n      )}\r\n      )\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TempNotification;\r\n"]},"metadata":{},"sourceType":"module"}