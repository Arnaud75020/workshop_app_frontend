{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arbog\\\\Documents\\\\workshop_app_frontend\\\\front-end\\\\src\\\\Components\\\\Admin\\\\AllRegistrations.js\";\nimport React, { useContext, useState } from 'react';\nimport './AllRegistrations.scss';\nimport RegistrationsList from './AllRegistrationsSubComponents/RegistrationsList';\nimport { UserContext } from '../../Context/UserContext';\nimport Filters from '../SharedComponents/Filters';\nimport ModalForm from './Modals/ModalForm';\n\nconst AllRegistrations = () => {\n  const {\n    users,\n    handleChangeSearch,\n    searchValue,\n    handleFilterUser,\n    filterUser,\n    deleteUser\n  } = useContext(UserContext);\n  const [displayModal, setDisplayModal] = useState(false);\n  const [user, setUser] = useState([]);\n  const [active, setActive] = useState(\"\");\n  const [userId, setuserId] = useState(\"\");\n  const [userRole, setUserRole] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const roles = [{\n    role: \"Attendees\"\n  }, {\n    role: \"Speakers\"\n  }];\n\n  const toggleDisplayModal = (activeModal, modalContent, sendTo, user_id, user_role) => {\n    setUserRole(user_role);\n    setuserId(user_id);\n    setActive(activeModal);\n    setDisplayModal(!displayModal);\n    setUser([sendTo]);\n    setContent(modalContent);\n\n    if (activeModal === \"message\") {\n      setDisplayModal(true);\n      setTimeout(() => setDisplayModal(false), 1500);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"all-resgistrations-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, \"All registrations\")), displayModal && /*#__PURE__*/React.createElement(ModalForm, {\n    toggleDisplayModal: toggleDisplayModal,\n    attendees: user,\n    active: active,\n    confirmFunction: deleteUser,\n    userRole: userRole,\n    id: userId,\n    confirmText: \"confirm\",\n    content: content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 30\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"all-registrations-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Filters, {\n    handleSearch: handleChangeSearch,\n    seachValue: searchValue,\n    optionsList: roles,\n    handleOption: handleFilterUser,\n    defaultOption: \"All users\",\n    optionKey: \"role\",\n    optionValue: filterUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(RegistrationsList, {\n    users: users,\n    toggleDisplayModal: toggleDisplayModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default AllRegistrations;","map":{"version":3,"sources":["C:/Users/arbog/Documents/workshop_app_frontend/front-end/src/Components/Admin/AllRegistrations.js"],"names":["React","useContext","useState","RegistrationsList","UserContext","Filters","ModalForm","AllRegistrations","users","handleChangeSearch","searchValue","handleFilterUser","filterUser","deleteUser","displayModal","setDisplayModal","user","setUser","active","setActive","userId","setuserId","userRole","setUserRole","content","setContent","roles","role","toggleDisplayModal","activeModal","modalContent","sendTo","user_id","user_role","setTimeout"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport './AllRegistrations.scss'\r\nimport RegistrationsList from './AllRegistrationsSubComponents/RegistrationsList';\r\nimport { UserContext } from '../../Context/UserContext'\r\nimport Filters from '../SharedComponents/Filters';\r\nimport ModalForm from './Modals/ModalForm';\r\n\r\nconst AllRegistrations = () => {\r\n\r\n    const { users, handleChangeSearch, searchValue, handleFilterUser, filterUser, deleteUser } = useContext(UserContext);\r\n\r\n    const [displayModal, setDisplayModal] = useState(false);\r\n    const [user, setUser] = useState([])\r\n    const [active, setActive] = useState(\"\");\r\n    const [userId, setuserId] = useState(\"\");\r\n    const [userRole, setUserRole] = useState(\"\");\r\n    const [content, setContent] = useState(\"\");\r\n\r\n    const roles = [{role:\"Attendees\"} ,{role:\"Speakers\"}]\r\n\r\n    const toggleDisplayModal = (activeModal, modalContent, sendTo, user_id,  user_role) => {\r\n        setUserRole(user_role)\r\n        setuserId(user_id)\r\n        setActive(activeModal)\r\n        setDisplayModal(!displayModal)\r\n        setUser([sendTo])\r\n        setContent(modalContent)\r\n        if(activeModal === \"message\"){\r\n            setDisplayModal(true);\r\n            setTimeout(() => setDisplayModal(false), 1500);\r\n          }\r\n    }\r\n\r\n    return ( \r\n        <div>\r\n            <div className=\"all-resgistrations-header\">\r\n                <h1>All registrations</h1>\r\n            </div>\r\n            {displayModal && <ModalForm toggleDisplayModal={toggleDisplayModal} attendees={user} active={active} confirmFunction={deleteUser} userRole={userRole} id={userId} confirmText={\"confirm\"} content={content} />}\r\n            <div className=\"all-registrations-body\">\r\n                <Filters handleSearch={handleChangeSearch} seachValue={searchValue} optionsList={roles} handleOption={handleFilterUser} defaultOption=\"All users\" optionKey=\"role\" optionValue={filterUser} />\r\n                <RegistrationsList users={users} toggleDisplayModal={toggleDisplayModal} /> \r\n            </div>\r\n           \r\n        </div>\r\n     );\r\n}\r\n \r\nexport default AllRegistrations;"]},"metadata":{},"sourceType":"module"}