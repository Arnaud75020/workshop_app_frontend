{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arbog\\\\Documents\\\\workshop_app_frontend\\\\front-end\\\\src\\\\Components\\\\Admin\\\\Modals\\\\NewNotificationForm.js\";\nimport React, { useContext, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { NotificationContext } from \"../../../Context/NotificationContext\";\n\nconst NewNotificationForm = ({\n  send_to,\n  attendees,\n  toggleDisplayModal\n}) => {\n  console.log(send_to);\n  const [checkboxCheck, setCheckboxCheck] = useState(false);\n  const {\n    confirmNotification\n  } = useContext(NotificationContext);\n\n  const toggleSchedule = () => {\n    setCheckboxCheck(!checkboxCheck);\n  };\n\n  const emailsList = attendees.map(attendee => {\n    return attendee.email;\n  }).join();\n  console.log(\"emailsList\", emailsList);\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n\n  const onSubmit = data => {\n    const now = new Date();\n    const now_formated = `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDay()}T${now.getHours()}:${now.getMinutes()}`;\n    const date = data.checkbox ? data.date : now_formated;\n    const state = data.checkbox ? \"scheduled\" : \"sent\";\n    const newObject = [{\n      subject: data.subject,\n      content: data.content,\n      state: state,\n      send_to: send_to,\n      date: date,\n      emailsList: emailsList\n    }];\n\n    if (data.checkbox) {\n      toggleSchedule();\n    }\n\n    confirmNotification(newObject);\n    toggleDisplayModal(\"message\", \"notification successfully sent\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"new-notification-form\",\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"new-notification-form-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"new-notification-form-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, \"to: \", send_to), /*#__PURE__*/React.createElement(\"input\", {\n    style: errors.subject && {\n      border: \"1px solid #3B65B0\"\n    },\n    type: \"text\",\n    placeholder: \"Subject\",\n    name: \"subject\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }), errors.subject && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 36\n    }\n  }, \"please add a subject\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    style: errors.content && {\n      border: \"1px solid #3B65B0\"\n    },\n    className: \"content\",\n    type: \"text\",\n    placeholder: \"Content\",\n    name: \"content\",\n    row: \"5\",\n    cols: \"50\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }), errors.content && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 36\n    }\n  }, \"please add some content\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"schedule\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"schedule\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, \"Schedule\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"checkbox\",\n    id: \"schedule\",\n    value: checkboxCheck,\n    onChange: toggleSchedule,\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }), checkboxCheck && /*#__PURE__*/React.createElement(\"input\", {\n    style: errors.subject && {\n      border: \"1px solid #3B65B0\"\n    },\n    type: \"datetime-local\",\n    name: \"date\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }), errors.date && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 37\n    }\n  }, \"please choose a date\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"new-notification-form-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, \"Send\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: toggleDisplayModal,\n    style: {\n      backgroundColor: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \"Cancel\")));\n};\n\nexport default NewNotificationForm;","map":{"version":3,"sources":["C:/Users/arbog/Documents/workshop_app_frontend/front-end/src/Components/Admin/Modals/NewNotificationForm.js"],"names":["React","useContext","useState","useForm","NotificationContext","NewNotificationForm","send_to","attendees","toggleDisplayModal","console","log","checkboxCheck","setCheckboxCheck","confirmNotification","toggleSchedule","emailsList","map","attendee","email","join","register","handleSubmit","errors","onSubmit","data","now","Date","now_formated","getFullYear","getMonth","getDay","getHours","getMinutes","date","checkbox","state","newObject","subject","content","border","required","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,mBAAT,QAAoC,sCAApC;;AAEA,MAAMC,mBAAmB,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAYC,EAAAA,SAAZ;AAAuBC,EAAAA;AAAvB,CAAD,KAAgD;AAExEC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AAEA,QAAM,CAACK,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM;AAAEW,IAAAA;AAAF,MAA0BZ,UAAU,CAACG,mBAAD,CAA1C;;AAEA,QAAMU,cAAc,GAAG,MAAM;AACzBF,IAAAA,gBAAgB,CAAC,CAACD,aAAF,CAAhB;AACH,GAFD;;AAIA,QAAMI,UAAU,GAAGR,SAAS,CAACS,GAAV,CAAcC,QAAQ,IAAI;AACzC,WAAOA,QAAQ,CAACC,KAAhB;AACH,GAFkB,EAEhBC,IAFgB,EAAnB;AAIAV,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BK,UAA1B;AAEA,QAAM;AAAEK,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAqCnB,OAAO,EAAlD;;AAEA,QAAMoB,QAAQ,GAAIC,IAAD,IAAU;AAEvB,UAAMC,GAAG,GAAG,IAAIC,IAAJ,EAAZ;AAEA,UAAMC,YAAY,GAAI,GAAEF,GAAG,CAACG,WAAJ,EAAkB,IAAGH,GAAG,CAACI,QAAJ,KAAiB,CAAE,IAAGJ,GAAG,CAACK,MAAJ,EAAa,IAAGL,GAAG,CAACM,QAAJ,EAAe,IAAGN,GAAG,CAACO,UAAJ,EAAiB,EAAtH;AAEA,UAAMC,IAAI,GAAGT,IAAI,CAACU,QAAL,GAAgBV,IAAI,CAACS,IAArB,GAA4BN,YAAzC;AAEA,UAAMQ,KAAK,GAAGX,IAAI,CAACU,QAAL,GAAgB,WAAhB,GAA8B,MAA5C;AAEA,UAAME,SAAS,GAAG,CAAC;AACfC,MAAAA,OAAO,EAAEb,IAAI,CAACa,OADC;AAEfC,MAAAA,OAAO,EAAEd,IAAI,CAACc,OAFC;AAGfH,MAAAA,KAAK,EAAEA,KAHQ;AAIf7B,MAAAA,OAAO,EAAEA,OAJM;AAKf2B,MAAAA,IAAI,EAAEA,IALS;AAMflB,MAAAA,UAAU,EAAEA;AANG,KAAD,CAAlB;;AASA,QAAGS,IAAI,CAACU,QAAR,EAAiB;AACbpB,MAAAA,cAAc;AACjB;;AAEDD,IAAAA,mBAAmB,CAACuB,SAAD,CAAnB;AACA5B,IAAAA,kBAAkB,CAAC,SAAD,EAAY,gCAAZ,CAAlB;AACH,GAzBD;;AA2BA,sBACI;AAAM,IAAA,SAAS,EAAC,uBAAhB;AAAwC,IAAA,QAAQ,EAAEa,YAAY,CAACE,QAAD,CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAQjB,OAAR,CADJ,eAEI;AAAO,IAAA,KAAK,EAAEgB,MAAM,CAACe,OAAP,IAAmB;AAACE,MAAAA,MAAM,EAAE;AAAT,KAAjC;AAAiE,IAAA,IAAI,EAAC,MAAtE;AAA6E,IAAA,WAAW,EAAC,SAAzF;AAAmG,IAAA,IAAI,EAAC,SAAxG;AAAkH,IAAA,GAAG,EAAEnB,QAAQ,CAAC;AAAEoB,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAA/H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGKlB,MAAM,CAACe,OAAP,iBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAHvB,eAII;AAAU,IAAA,KAAK,EAAEf,MAAM,CAACgB,OAAP,IAAmB;AAACC,MAAAA,MAAM,EAAE;AAAT,KAApC;AAAoE,IAAA,SAAS,EAAC,SAA9E;AAAwF,IAAA,IAAI,EAAC,MAA7F;AAAoG,IAAA,WAAW,EAAC,SAAhH;AAA0H,IAAA,IAAI,EAAC,SAA/H;AAAyI,IAAA,GAAG,EAAC,GAA7I;AAAiJ,IAAA,IAAI,EAAC,IAAtJ;AAA2J,IAAA,GAAG,EAAEnB,QAAQ,CAAC;AAAEoB,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAAxK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKKlB,MAAM,CAACgB,OAAP,iBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BALvB,eAMI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,EAAC,UAA5B;AAAuC,IAAA,EAAE,EAAC,UAA1C;AAAqD,IAAA,KAAK,EAAE3B,aAA5D;AAA2E,IAAA,QAAQ,EAAEG,cAArF;AAAqG,IAAA,GAAG,EAAEM,QAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGKT,aAAa,iBACd;AAAO,IAAA,KAAK,EAAEW,MAAM,CAACe,OAAP,IAAmB;AAACE,MAAAA,MAAM,EAAE;AAAT,KAAjC;AAAiE,IAAA,IAAI,EAAC,gBAAtE;AAAuF,IAAA,IAAI,EAAC,MAA5F;AAAmG,IAAA,GAAG,EAAEnB,QAAQ,CAAC;AAAEoB,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAAhH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKKlB,MAAM,CAACW,IAAP,iBAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BALpB,CANJ,CAFJ,eAgBI;AAAK,IAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,IAAA,OAAO,EAAEzB,kBAAjB;AAAqC,IAAA,KAAK,EAAG;AAACiC,MAAAA,eAAe,EAAC;AAAjB,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CAhBJ,CADJ;AAuBH,CArED;;AAwEA,eAAepC,mBAAf","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { NotificationContext } from \"../../../Context/NotificationContext\";\r\n\r\nconst NewNotificationForm = ({ send_to , attendees, toggleDisplayModal}) => {\r\n\r\n    console.log(send_to)\r\n\r\n    const [checkboxCheck, setCheckboxCheck] = useState(false);\r\n    const { confirmNotification } = useContext(NotificationContext)\r\n\r\n    const toggleSchedule = () => {\r\n        setCheckboxCheck(!checkboxCheck);\r\n    };\r\n    \r\n    const emailsList = attendees.map(attendee => {\r\n        return attendee.email\r\n    }).join()\r\n\r\n    console.log(\"emailsList\", emailsList)\r\n  \r\n    const { register, handleSubmit, errors } = useForm();\r\n\r\n    const onSubmit = (data) => {\r\n\r\n        const now = new Date();\r\n\r\n        const now_formated = `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDay()}T${now.getHours()}:${now.getMinutes()}`\r\n\r\n        const date = data.checkbox ? data.date : now_formated;\r\n\r\n        const state = data.checkbox ? \"scheduled\" : \"sent\"\r\n\r\n        const newObject = [{\r\n            subject: data.subject,\r\n            content: data.content,\r\n            state: state,\r\n            send_to: send_to,\r\n            date: date,\r\n            emailsList: emailsList\r\n            }];\r\n        \r\n        if(data.checkbox){\r\n            toggleSchedule()\r\n        }\r\n\r\n        confirmNotification(newObject)\r\n        toggleDisplayModal(\"message\", \"notification successfully sent\")\r\n    };\r\n\r\n    return (\r\n        <form className=\"new-notification-form\" onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"new-notification-form-header\" />\r\n            <div className=\"new-notification-form-body\">\r\n                <p>to: {send_to}</p>\r\n                <input style={errors.subject && ({border: \"1px solid #3B65B0\"})} type=\"text\" placeholder=\"Subject\" name=\"subject\" ref={register({ required: true })} />\r\n                {errors.subject && <p>please add a subject</p>}\r\n                <textarea style={errors.content && ({border: \"1px solid #3B65B0\"})} className=\"content\" type=\"text\" placeholder=\"Content\" name=\"content\" row=\"5\" cols=\"50\" ref={register({ required: true })} />\r\n                {errors.content && <p>please add some content</p>}\r\n                <div className=\"schedule\">\r\n                    <label htmlFor=\"schedule\">Schedule</label>\r\n                    <input type=\"checkbox\" name=\"checkbox\" id=\"schedule\" value={checkboxCheck} onChange={toggleSchedule} ref={register}/>\r\n                    {checkboxCheck && \r\n                    <input style={errors.subject && ({border: \"1px solid #3B65B0\"})} type=\"datetime-local\" name=\"date\" ref={register({ required: true })}/>}\r\n                    {errors.date && <p>please choose a date</p>}\r\n                </div>\r\n            </div>\r\n            <div className=\"new-notification-form-footer\">\r\n                <button type=\"submit\">Send</button>\r\n                <button onClick={toggleDisplayModal} style={({backgroundColor:\"red\"})}>Cancel</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\n \r\nexport default NewNotificationForm;\r\n"]},"metadata":{},"sourceType":"module"}